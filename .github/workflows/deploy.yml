name: Deploy Komercia Stores Templates Nuxt

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm i

      - name: Build project
        run: npm run build

      - name: Copy to temp and archive
        run: |
          tar -czf deployment.tar.gz \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            --exclude='coverage' \
            --exclude='*.log' \
            --exclude='.env*' \
            --exclude='deployment.tar.gz' \
            .
            
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Transfer deployment files
        run: |
          scp -o StrictHostKeyChecking=no deployment.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_PATH }}/
          scp -o StrictHostKeyChecking=no ecosystem.config.js ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_PATH }}/

      - name: Extract and prepare deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            cd ${{ secrets.DEPLOY_PATH }} &&
            tar -xzf deployment.tar.gz &&
            rm deployment.tar.gz &&
            npm install
          "

      - name: Create logs directory
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            cd ${{ secrets.DEPLOY_PATH }} &&
            mkdir -p logs
          "

      - name: Deploy with PM2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            cd ${{ secrets.DEPLOY_PATH }} &&
            pm2 reload ecosystem.config.js || pm2 start ecosystem.config.js
          "

      - name: Clean up
        run: rm deployment.tar.gz

      - name: Notify deployment success
        run: echo "Deployment to ${{ secrets.SERVER_IP }} successful!"

      - name: Notify failure
        if: failure()
        run: echo "Deployment to ${{ secrets.SERVER_IP }} failed!"
